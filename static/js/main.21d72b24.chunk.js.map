{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/UI/Input/Input.module.css","components/Navigation/Toolbar/Toolbar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","hoc/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/Backdrop/Backdrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","hoc/Aux/Aux.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","hoc/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler/withErrorHandler.js","store/actions/burgerBuilder.js","store/actions/actionTypes.js","store/actions/order.js","containers/BurgerBuilder/BurgerBuilder.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","App.js","serviceWorker.js","store/utility.js","store/reducers/burgerBuilder.js","store/reducers/order.js","index.js"],"names":["module","exports","aux","props","children","logo","className","classes","Logo","src","burgerLogo","alt","navigationItem","NavigationItem","activeClassName","active","exact","to","link","navigationItems","NavigationItems","drawerToggle","DrawerToggle","onClick","clicked","toolbar","Toolbar","drawerToggleClicked","DesktopOnly","backdrop","show","Backdrop","sideDrawer","attachedClasses","SideDrawer","Close","open","Open","Aux","closed","join","Layout","state","showSideDrawer","SideDrawerClosedHandler","setState","SideDrawerToggleHandler","prevState","this","Content","Component","BurgerIngredient","ingredient","type","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Bacon","Salad","burger","console","log","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","key","reduce","arr","el","concat","length","Burger","buildControl","BuildControl","Label","label","Less","removed","disabled","More","added","controls","buildControls","BuildControls","price","toFixed","ctrl","ingredientAdded","ingredientRemoved","OrderButton","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","button","Button","btnType","OrderSummary","ingredientSummary","textTransform","purchaseCancelled","purchaseContinuedHandler","instance","axios","create","baseURL","spinner","Loader","withErrorHandler","WrappedComponent","errorConfirmedHandler","error","reqInterceptor","interceptors","request","use","req","resInterceptor","response","res","eject","message","fetchIngredientsFailed","purchaseBurgerStart","BurgerBuilder","purchasing","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","history","push","onInitIngredients","sum","disabledInfo","ings","orderSummary","loading","Spinner","onIngredientAdded","onIngredientRemoved","updatePurchaseState","connect","burgerBuilder","totalPrice","dispatch","ingName","ingredientName","get","then","data","catch","checkoutSummary","CheckoutSummary","width","height","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","Invalid","elementType","elementConfig","value","onChange","changed","options","option","displayValue","Input","ContactData","orderForm","name","placeholder","validation","required","valid","street","zipCode","minLength","maxLength","country","email","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","fromElementIdentifier","order","orderData","onOrderBurger","onChangeHandler","inputIdentifier","updatedOrderForm","updatedFormElement","target","checkValidity","rules","isValid","trim","isEmail","test","isNumeric","formElementsArray","id","config","form","onSubmit","formElement","post","orderId","purchseBurgerSuccess","dataname","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","purchasedRedirect","purchased","path","match","component","amount","ingredientOutput","ig","display","border","padding","Order","Number","parseFloat","Orders","onFetchOrders","orders","fetchedOrders","err","Auth","password","inputChangedHandler","controlName","updatedControls","App","Boolean","window","location","hostname","updateObject","oldObject","updatedProperties","initialState","INGREDIENT_PRICES","salad","cheese","meat","bacon","addIngredient","action","updatedIngredient","updatedState","removeIngredient","updatedIng","updatedSt","setIngredients","reducer","purchaseInit","purchaseBurgerSuccess","newOrder","fetchOrdersStart","fetchOrdersSuccess","fetchOrdersFail","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","store","createStore","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.21d72b24.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__2US69\",\"BreadTop\":\"BurgerIngredient_BreadTop__3Y4-R\",\"Seeds1\":\"BurgerIngredient_Seeds1__J6vUJ\",\"Seeds2\":\"BurgerIngredient_Seeds2__2Ylex\",\"Meat\":\"BurgerIngredient_Meat__3flwI\",\"Cheese\":\"BurgerIngredient_Cheese__3rOTJ\",\"Salad\":\"BurgerIngredient_Salad__KLnhy\",\"Bacon\":\"BurgerIngredient_Bacon__1KK6n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__3kXLK\",\"Open\":\"SideDrawer_Open__1tCv1\",\"Close\":\"SideDrawer_Close__9j7x-\",\"Logo\":\"SideDrawer_Logo__3voUv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__O8649\",\"Label\":\"BuildControl_Label__TQkTk\",\"Less\":\"BuildControl_Less__3Ttg8\",\"More\":\"BuildControl_More__1MY7B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__3r5Ke\",\"Label\":\"Input_Label__1qyHr\",\"InputElement\":\"Input_InputElement__2m88K\",\"Invalid\":\"Input_Invalid__16Mis\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Toolbar\":\"Toolbar_Toolbar__ApScI\",\"Logo\":\"Toolbar_Logo__3Lk47\",\"DesktopOnly\":\"Toolbar_DesktopOnly__LuPaL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__2SpXc\",\"active\":\"NavigationItem_active__2v2td\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__1YmbS\",\"OrderButton\":\"BuildControls_OrderButton___M-Du\",\"enable\":\"BuildControls_enable__9xLsD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__3gFiX\",\"Success\":\"Button_Success__2Rka1\",\"Danger\":\"Button_Danger__2ogZq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__3H3X8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1N0xH\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1fnFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__m405X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3j6VK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__10T8F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__1-5dN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Spinner_Loader__1twK-\",\"load6\":\"Spinner_load6__1_74m\",\"round\":\"Spinner_round__3G_CY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__3PsXi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__20AK_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3kYZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__1Zul_\"};","const aux = (props) => props.children;\n\nexport default aux;","import React from 'react'\n\nimport classes from './Logo.module.css'\nimport burgerLogo from '../../assets/images/burger-logo.png'\n\nconst logo = (props) => (\n    <div className={classes.Logo}>\n        <img src={burgerLogo} alt=\"My Burger Logo\" />\n    </div>\n)\n\nexport default logo;","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nimport classes from './NavigationItem.module.css'\n\nconst navigationItem = (props) => (\n    <li className={classes.NavigationItem}>\n        <NavLink \n            activeClassName={classes.active}\n            exact={props.exact}\n            to={props.link}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;","import React from 'react';\n\nimport classes from './NavigationItems.module.css';\nimport NavigationItem from './NavigationItem/NavigationItem';\n\nconst navigationItems = (props) => (\n    <ul className={classes.NavigationItems}>\n        <NavigationItem link=\"/\" exact >Burger Builder</NavigationItem>\n        <NavigationItem link=\"/orders\" >Orders</NavigationItem>\n        <NavigationItem link=\"/auth\" >Authenticate</NavigationItem>\n    </ul>\n);\n\nexport default navigationItems;","import React from 'react';\nimport classes from './DrawerToggle.module.css';\n\nconst drawerToggle = (props) => (\n    <div className={classes.DrawerToggle} onClick={props.clicked}>\n        <div></div>\n        <div></div>\n        <div></div>\n    </div>\n)\n\nexport default drawerToggle;","import React from 'react';\nimport classes from './Toolbar.module.css';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\n\nconst toolbar = (props) => (\n    <header className={classes.Toolbar}>\n        <DrawerToggle clicked={props.drawerToggleClicked} />\n        <div className={classes.Logo}>\n            <Logo />\n        </div>\n        <nav className={classes.DesktopOnly}>\n            <NavigationItems />\n        </nav>\n    </header>\n);\n\nexport default toolbar;","import React from 'react';\nimport classes from './Backdrop.module.css';\n\nconst backdrop = (props) => (\n    props.show ? <div className={classes.Backdrop} onClick={props.clicked}></div> : null\n)\n\nexport default backdrop;","import React from 'react';\n\nimport Logo from '../../Logo/Logo'\nimport NavigationItems from '../NavigationItems/NavigationItems'\nimport classes from './SideDrawer.module.css'\nimport Backdrop from '../../UI/Backdrop/Backdrop'\nimport Aux from '../../../hoc/Aux/Aux'\n\nconst sideDrawer = (props) => {\n    let attachedClasses = [classes.SideDrawer, classes.Close]\n\n    if (props.open) {\n        attachedClasses = [classes.SideDrawer, classes.Open]\n    }\n\n    return (\n        <Aux>\n            <Backdrop show={props.open} clicked={props.closed}/>\n            <div className={attachedClasses.join(' ')}>\n                <div className={classes.Logo}>\n                    <Logo />\n                </div>\n                <nav>\n                    <NavigationItems />\n                </nav>\n            </div>\n        </Aux>\n    );\n};\n\nexport default sideDrawer;","import React, { Component } from 'react';\nimport Aux from '../Aux/Aux';\nimport classes from './Layout.module.css'\nimport Toolbar from '../../components/Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../../components/Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n\n    state = {\n        showSideDrawer: false\n    }\n\n    SideDrawerClosedHandler = () => {\n        this.setState({showSideDrawer: false})\n    }\n\n    SideDrawerToggleHandler = () => {\n        this.setState((prevState) => {\n            return {showSideDrawer: !prevState.showSideDrawer};\n        });\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Toolbar drawerToggleClicked={this.SideDrawerToggleHandler}/>\n                <SideDrawer \n                    open={this.state.showSideDrawer} \n                    closed={this.SideDrawerClosedHandler}/>\n                <main className={classes.Content}>\n                    {this.props.children}\n                </main>\n            </Aux>\n        )\n    }\n};\n\nexport default Layout;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport classes from './BurgerIngredient.module.css';\n\nclass BurgerIngredient extends Component {\n    render () {\n        let ingredient = null;\n\n    switch (this.props.type) {\n        case ('bread-bottom'):\n            ingredient = <div className={classes.BreadBottom}></div>\n            break;\n        case ('bread-top'):\n            ingredient = (\n                <div className={classes.BreadTop}>\n                    <div className={classes.Seeds1}></div>\n                    <div className={classes.Seeds2}></div>\n                </div>\n            )\n            break;\n        case ('meat'): \n            ingredient = <div className={classes.Meat}></div>\n            break;\n        case ('cheese'): \n            ingredient = <div className={classes.Cheese}></div>\n            break;\n        case ('bacon'): \n            ingredient = <div className={classes.Bacon}></div>\n            break;\n        case ('salad'): \n            ingredient = <div className={classes.Salad}></div>\n            break;\n        default: \n            ingredient = null;\n    }\n\n    return ingredient;\n    }\n}\n\nBurgerIngredient.propTypes = {\n    type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;","import React from 'react';\n// import { withRouter } from 'react-router-dom'\nimport classes from './Burger.module.css'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\n\nconst burger = (props) => {\n    console.log('Burger:')\n    console.log(props);\n    let transformedIngredients = Object.keys(props.ingredients)\n        .map(igKey => {\n            return [...Array(props.ingredients[igKey])].map((_, i) => {\n                return <BurgerIngredient key={igKey + i} type={igKey} />;\n            });\n        })\n        .reduce((arr, el) => {\n            return arr.concat(el)\n        }, []);\n        console.log(transformedIngredients);\n        if(transformedIngredients.length === 0) {\n            transformedIngredients = <p>Please start adding ingredients!</p>\n        }\n        return (\n        <div className={classes.Burger}>\n            <BurgerIngredient type=\"bread-top\" />\n            {transformedIngredients}\n            <BurgerIngredient type=\"bread-bottom\" />\n        </div>\n    );\n};\n\n// the higher order component 'withRouter' can inject the componet to the router\n// export default withRouter(burger);\nexport default burger","import React from 'react';\nimport classes from './BuildControl.module.css';\nconst buildControl = (props) => (\n    <div className={classes.BuildControl}>\n        <div className={classes.Label}>{props.label}</div>\n        <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>Less</button>\n        <button className={classes.More} onClick={props.added}>More</button>\n    </div>\n)\n\nexport default buildControl;","import React from 'react';\nimport classes from './BuildControls.module.css';\nimport BuildControl from './BuildControl/BuildControl';\n\nconst controls = [\n    { label: 'Salad', type: 'salad' },\n    { label: 'Bacon', type: 'bacon' },\n    { label: 'Cheese', type: 'cheese' },\n    { label: 'Meat', type: 'meat' },\n];\n\nconst buildControls = (props) => (\n    <div className={classes.BuildControls}>\n        <p>Current Price: <strong>{props.price.toFixed(2)}</strong></p>\n        {controls.map(ctrl => (\n            <BuildControl \n                key={ctrl.label} \n                label={ctrl.label} \n                added={() => props.ingredientAdded(ctrl.type)}\n                removed={() => props.ingredientRemoved(ctrl.type)}\n                disabled={props.disabled[ctrl.type]}\n            />\n        ))}\n        <button\n            className={classes.OrderButton} \n            disabled={!props.purchasable}\n            onClick={props.ordered}>ORDER NOW</button>\n    </div>\n);\n\nexport default buildControls;","import React, { Component } from 'react';\nimport classes from './Modal.module.css';\nimport Aux from '../../../hoc/Aux/Aux';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n    shouldComponentUpdate (nextProps, nextState) {\n        return nextProps.show !== this.props.show || nextProps.children !== this.props.children;\n    }\n\n    componentDidUpdate () {\n        console.log('[Modal] WillUpdate')\n    }\n\n    render () {\n        return (\n            <Aux>\n                <Backdrop show={this.props.show} clicked={this.props.modalClosed}/>\n                <div className={classes.Modal}\n                    style={{\n                        transform: this.props.show ? 'translateY(0)' : 'translateY(-100vh)',\n                        opacity: this.props.show ? '1' : '0'\n                    }}\n                >\n                    {this.props.children}\n                </div>\n            </Aux>\n        )\n    }\n}\n\nexport default Modal;","import React from 'react';\nimport classes from './Button.module.css'\n\nconst button = (props) => (\n    <button \n        disabled={props.disabled}\n        className={[classes.Button, classes[props.btnType]].join(' ')}\n        onClick={props.clicked}\n    >{props.children}</button>\n)\n\nexport default button;","import React, {Component} from 'react';\n\nimport Aux from '../../../hoc/Aux/Aux';\nimport Button from '../../UI/Button/Button';\nclass OrderSummary extends Component {\n    componentDidUpdate () {\n        console.log('[OrderSummary] DidUpdate')\n    }\n\n    render () {\n        const ingredientSummary = Object.keys(this.props.ingredients)\n        .map(igKey => {\n            return (\n                <li key={igKey}>\n                    <span style={{textTransform: 'capitalize'}}>{igKey}:</span> {this.props.ingredients[igKey]}\n                </li>\n            )\n        });\n\n        return (\n            <Aux>\n                <h3>Your Order</h3>\n                <p>A delicious burger with the following ingredients:</p>\n                <ul>\n                    {ingredientSummary}\n                </ul>\n                <p><strong>Total Price:</strong> {this.props.price.toFixed(2)}</p>\n                <p>Continue to checkout?</p>\n                <Button clicked={this.props.purchaseCancelled} btnType=\"Danger\">CANCEL</Button>\n                <Button clicked={this.props.purchaseContinuedHandler} btnType=\"Success\">CONTINUE</Button>\n            </Aux>\n        )\n    }\n        \n    \n}\n\n\n\nexport default OrderSummary;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: 'https://react-my-burger-260b0.firebaseio.com/'\n});\n\nexport default instance;","import React from 'react'\nimport classes from './Spinner.module.css'\n\nconst spinner = () => (\n    <div className={classes.Loader}>Loading...</div>\n) \n\nexport default spinner","import React, { Component } from 'react'\nimport Modal from '../../components/UI/Modal/Modal'\nimport Aux from '../Aux/Aux'\n\nconst withErrorHandler = ( WrappedComponent, axios ) => {\n    return class extends Component {\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                error: null\n            }\n\n            this.reqInterceptor = axios.interceptors.request.use(req => {\n                this.setState({error: null})\n                return req;\n            })\n            this.resInterceptor = axios.interceptors.response.use(res => res, error => {\n                this.setState({error: error})\n            })\n        }\n\n        componentWillUnmount() {\n            axios.interceptors.request.eject(this.reqInterceptor);\n            axios.interceptors.response.eject(this.resInterceptor);\n        }\n\n        errorConfirmedHandler = () => {\n            this.setState({error: null})\n        }\n\n        render () {\n            return (\n                <Aux>\n                    <Modal show={this.state.error}\n                        modalClosed={this.errorConfirmedHandler}>\n                        {this.state.error ? this.state.error.message : null}\n                    </Modal>\n                    <WrappedComponent {...this.props} />\n                </Aux>\n            )\n        }\n    }\n}\n\nexport default withErrorHandler","import * as actionTypes from './actionTypes'\nimport axios from '../../axios-orders';\n\nexport const addIngredient = (name) => {\n    return {\n        type: actionTypes.ADD_INGREDIENTS,\n        ingredientName: name\n    }\n}\n\nexport const removeIngredient = (name) => {\n    return {\n        type: actionTypes.REMOVE_INGREDIENTS,\n        ingredientName: name\n    }\n}\n\nexport const setIngredients = (ingredients) => {\n    return {\n        type: actionTypes.SET_INGREDIENTS,\n        ingredients: ingredients\n    }\n}\n\nexport const initIngredients = () => {\n    return dispatch => {\n        axios.get('https://react-my-burger-260b0.firebaseio.com/ingredients.json')\n            .then(response => {\n                dispatch(setIngredients(response.data));\n            })\n            .catch(error => {\n                dispatch(fetchIngredientsFailed())\n            })\n    }\n}\n\nexport const fetchIngredientsFailed = () => {\n    return {\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\n    }\n}","export const ADD_INGREDIENTS = 'ADD_INGREDIENTS';\nexport const REMOVE_INGREDIENTS = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\nexport const PURCHASE_INIT = 'PURCHASE_INIT';\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START';\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';","import * as actionTypes from './actionTypes';\nimport axios from '../../axios-orders';\n\nexport const purchseBurgerSuccess = (id, orderData) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\n        orderId: id,\n        orderData: orderData\n    }\n}\n\nexport const purchaseBurgerFail = (error) => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_FAIL,\n        error: error\n    }\n}\n\nexport const purchaseBurger = (orderData) => {\n    return dispatch => {\n       dispatch(purchaseBurgerStart());\n        axios.post('/orders.json', orderData)\n            .then(response => {\n                console.log(response.data)\n                dispatch(purchseBurgerSuccess(response.dataname, orderData))\n            })\n            .catch(error => {\n                dispatch(purchaseBurgerFail(error))\n            });\n    }\n}\n\nexport const purchaseBurgerStart = () => {\n    return {\n        type: actionTypes.PURCHASE_BURGER_START\n    }\n}\n\nexport const purchaseInit = () => {\n    return {\n        type: actionTypes.PURCHASE_INIT\n    }\n}\n\nexport const fetchOrdersSuccess = (orders) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\n        orders: orders\n    }\n}\n\nexport const fetchOrdersFail = (error) => {\n    return {\n        type: actionTypes.FETCH_ORDERS_FAIL,\n        error: error\n    }\n}\n\nexport const fetchOrdersStart = () => {\n    return {\n        type: actionTypes.FETCH_ORDERS_START,\n    }\n}\n\nexport const fetchOrders = () => {\n    return dispatch => {\n        dispatch(fetchOrdersStart())\n        axios.get('/orders.json')\n            .then(res => {\n                const fetchedOrders = [];\n                for (let key in res.data) {\n                    fetchedOrders.push({\n                        ...res.data[key],\n                        id: key\n                    })\n                }\n                dispatch(fetchOrdersSuccess(fetchedOrders));\n            })\n            .catch(err => {\n                dispatch(fetchOrdersFail(err))\n            })\n    }\n}","import React, { Component } from 'react';\nimport Aux from '../../hoc/Aux/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport { connect } from 'react-redux';\nimport * as actions from '../../store/actions/index';\n\n\n\nclass BurgerBuilder extends Component {\n    // constructor (props) {\n    //     super(props);\n    //     this.state = {}\n    // }\n    state = {\n        purchasing: false,\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        this.props.onInitIngredients();\n    }\n\n    updatePurchaseState (ingredients) {\n        \n        const sum = Object.keys(ingredients)\n            .map(igKey => {\n                return ingredients[igKey]\n            })\n            .reduce((sum, el) => {\n                return sum + el;\n            }, 0);\n        return sum > 0;\n    }\n\n    purchaseHandler = () => {\n        this.setState({purchasing: true})\n    }\n\n    purchaseCancelHandler = () => {\n        this.setState({purchasing: false})\n    }\n\n    purchaseContinueHandler = () => {\n        this.props.onInitPurchase();\n        this.props.history.push('/checkout');\n    }\n\n    render () {\n        const disabledInfo = {\n            ...this.props.ings\n        }\n\n        for (let key in disabledInfo) {\n            disabledInfo[key] = disabledInfo[key] <= 0;\n        }\n\n        let orderSummary = null;\n\n        if(this.state.loading) {\n            orderSummary = <Spinner />\n        }\n\n        let burger = this.props.error ? <p>Ingredients can't be loaded!</p> : <Spinner />\n\n        console.log('burgerBuilder')\n        console.log(this.props.ings)\n        if(this.props.ings) {\n            burger = (\n                <Aux>\n                    <Burger ingredients={this.props.ings} />\n                    <BuildControls \n                        ingredientAdded={this.props.onIngredientAdded}\n                        ingredientRemoved={this.props.onIngredientRemoved}\n                        disabled={disabledInfo}\n                        purchasable={this.updatePurchaseState(this.props.ings)}\n                        price={this.props.price}\n                        ordered={this.purchaseHandler}\n                    />\n                </Aux>\n            );\n\n            orderSummary = <OrderSummary \n                                ingredients={this.props.ings}\n                                price={this.props.price}\n                                purchaseCancelled={this.purchaseCancelHandler}\n                                purchaseContinuedHandler={this.purchaseContinueHandler} />\n        }\n\n        return (\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                    {orderSummary}\n                </Modal>\n                {burger}\n            </Aux>\n        );\n    }\n}\n\nconst mapStateToProps = state =>  {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        error: state.burgerBuilder.error\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onIngredientAdded: (ingName) => dispatch(actions.addIngredient(ingName)),\n        onIngredientRemoved: (ingName) => dispatch(actions.removeIngredient(ingName)),\n        onInitIngredients: () => dispatch(actions.initIngredients()),\n        onInitPurchase: () => dispatch(actions.purchaseInit())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import React from 'react'\nimport Burger from '../../Burger/Burger'\nimport Button from '../../UI/Button/Button'\nimport classes from './CheckoutSummary.module.css'\n\nconst checkoutSummary = (props) => {\n    return (\n        <div className={classes.CheckoutSummary}>\n            <h1>We hope it tastes well!</h1>\n            <div style={{width: '100%', height: '300px', margin: 'auto'}}>\n                <Burger ingredients={props.ingredients} />\n            </div>\n            <Button \n                btnType=\"Danger\"\n                clicked={props.checkoutCancelled}>CANCEL</Button>\n            <Button \n                btnType=\"Success\"\n                clicked={props.checkoutContinued}>CONTINUE</Button>\n        </div>\n    )\n}\n\nexport default checkoutSummary","import React from 'react'\nimport classes from './Input.module.css'\n\nconst input = (props) => { \n    let inputElement = null;\n    const inputClasses = [classes.InputElement]\n\n    if(props.invalid && props.shouldValidate && props.touched) {\n        inputClasses.push(classes.Invalid)\n    }\n\n    switch (props.elementType) {\n        case ('input'):\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value} \n                onChange={props.changed} />\n            break;\n        case ('textarea'):\n            inputElement = <textarea \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n            break;\n        case ('select'):\n            inputElement = <select \n                className={inputClasses.join(' ')} \n                value={props.value}\n                onChange={props.changed} >\n                    {props.elementConfig.options.map(option => (\n                        <option key={option.value} value={option.value}>{option.displayValue}</option>\n                    ))}\n\n                </select>\n            break;\n        default:\n            inputElement = <input \n                className={inputClasses.join(' ')} \n                {...props.elementConfig} \n                value={props.value}\n                onChange={props.changed} />\n    }\n\n    return (\n        <div className={classes.Input} >\n            <label className={classes.Label}>{props.label}</label>\n            {inputElement}\n        </div>\n    )\n}\n\nexport default input;","import React, { Component } from 'react'\nimport classes from './ContactData.module.css'\nimport Button from '../../../components/UI/Button/Button'\nimport axios from '../../../axios-orders'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport { connect } from 'react-redux'\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n    state = {\n        orderForm: {\n\n            name: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Your Name'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            street: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Street'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            zipCode: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Zip Code'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 4,\n                    maxLength: 4\n                },\n                valid: false,\n                touched: false\n            },\n            country: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Country'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'email',\n                    placeholder: 'Your Email'\n                },\n                value: '',\n                validation: {\n                    required: true\n                },\n                valid: false,\n                touched: false\n            },\n            deliveryMethod: {\n                elementType: 'select',\n                elementConfig: {\n                    options: [\n                        {value: 'fastest', displayValue: 'Fastest'},\n                        {value: 'cheapest', displayValue: 'Cheapest'},\n                    ]\n                },\n                value: 'fastest',\n                validation: {},\n                valid: true\n            }\n        },\n        formIsValid: false,\n    }\n\n    orderHandler = (event) => {\n        // Use preventDefault to prevent reloading the page when click submit form button.\n        event.preventDefault()\n        const formData = {}\n        for (let fromElementIdentifier in this.state.orderForm) {\n            formData[fromElementIdentifier] = this.state.orderForm[fromElementIdentifier].value\n        }\n\n        const order = {\n            ingredients: this.props.ings,\n            price: this.props.price,\n            orderData: formData\n        }\n        this.props.onOrderBurger(order)\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if(rules && rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if(rules && rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if(rules && rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if(rules.isEmail) {\n            const pattern = /[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)/\n            isValid = pattern.test(value) && isValid\n        }\n\n        if(rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    onChangeHandler = (event, inputIdentifier) => {\n        const updatedOrderForm = {...this.state.orderForm}\n        const updatedFormElement = {\n            ...updatedOrderForm[inputIdentifier]\n        }\n\n        updatedFormElement.value = event.target.value\n        updatedFormElement.valid = this.checkValidity(updatedFormElement.value, updatedFormElement.validation)\n        updatedFormElement.touched = true;\n        updatedOrderForm[inputIdentifier] = updatedFormElement\n        \n        let formIsValid = true;\n        for (let inputIdentifier in updatedOrderForm) {\n            formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid\n        }\n\n        this.setState({orderForm: updatedOrderForm, formIsValid: formIsValid})\n    }\n\n    render () {\n        const formElementsArray = []\n        for (let key in this.state.orderForm) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.orderForm[key]\n            })\n        }\n\n        let form = (\n                <form onSubmit={this.orderHandler}>\n                    {formElementsArray.map(formElement => (\n                        <Input \n                            elementType={formElement.config.elementType} \n                            elementConfig={formElement.config.elementConfig} \n                            value={formElement.config.value} \n                            key={formElement.id} \n                            invalid={!formElement.config.valid}\n                            shouldValidate={formElement.config.validation}\n                            touched={formElement.config.touched}\n                            changed={(event) => this.onChangeHandler(event, formElement.id)} />\n                    ))}\n                    \n                    <Button btnType=\"Success\" disabled={!this.state.formIsValid} clicked={this.orderHandler}>Order</Button>\n                </form>\n        );\n        if (this.props.loading) {\n            form = <Spinner />\n        }\n        return (\n            <div className={classes.ContactData}>\n                <h4>Enter your contact data:</h4>\n                {form}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        price: state.burgerBuilder.totalPrice,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onOrderBurger: (orderData) => dispatch(actions.purchaseBurger(orderData))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios))","import React, { Component } from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary'\nimport { connect } from 'react-redux'\nimport ContactData from './ContactData/ContactData'\n\nclass Checkout extends Component {\n\n    checkoutCancelledHandler = () => {\n        this.props.history.goBack();\n    }\n\n    checkoutContinuedHandler = () => {\n        this.props.history.replace('/checkout/contact-data')\n    }\n\n    render () {\n        let summary = <Redirect to=\"/\" />\n        \n        if(this.props.ings) {\n            const purchasedRedirect = this.props.purchased ? <Redirect to='/' /> : null;\n            summary = (\n                <div>\n                    {purchasedRedirect}\n                    <CheckoutSummary \n                        ingredients={this.props.ings}\n                        checkoutCancelled={this.checkoutCancelledHandler}\n                        checkoutContinued={this.checkoutContinuedHandler} />\n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData} /> \n\n                    {/* \n                        The following code can't pass props to the child component. So instead of using 'component' in the router,\n                        we can also use 'render' to render a component with passing props.\n                    \n                    <Route \n                        path={this.props.match.path + '/contact-data'} \n                        component={ContactData} />  */}\n                </div>\n            )\n        }\n        return (\n            <div>\n                {summary}\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ings: state.burgerBuilder.ingredients,\n        purchased: state.order.purchased\n    }\n}\n\nexport default connect( mapStateToProps )(Checkout);","import React from 'react'\nimport classes from './Order.module.css'\n\nconst order = (props) => {\n    const ingredients = []\n    for (let ingredientName in props.ingredients) {\n        ingredients.push(\n            {\n                name: ingredientName, \n                amount: props.ingredients[ingredientName]\n            }\n        )\n    }\n\n    const ingredientOutput = ingredients.map(ig => {\n        return <span style={{\n                        textTransform: 'capitalize', \n                        display: 'inline-block',\n                        margin: '0 8px',\n                        border: '1px solid #ccc',\n                        padding: '5px'\n                    }} key={ig.name}>{ig.name} ({ig.amount})</span>\n    })\n\n    return (\n        <div className={classes.Order}>\n            <p>Ingredients: {ingredientOutput}</p>\n            <p>Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n        </div>\n    )\n    \n}\n\nexport default order;","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Order from '../../components/Order/Order'\nimport axios from '../../axios-orders'\nimport withErrorHandler from '../../hoc/withErrorHandler/withErrorHandler'\nimport * as actions from '../../store/actions/index'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n\n    componentDidMount() {\n        this.props.onFetchOrders()\n    }\n\n    render () {\n        let orders = <Spinner />\n        if(!this.props.loading) {\n            orders = this.props.orders.map(order => (\n                    <Order \n                        key={order.id}\n                        ingredients={order.ingredients}\n                        price={order.price} />\n                )\n            )\n        }\n        return (\n            <div>\n                {orders}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        orders: state.order.orders,\n        loading: state.order.loading\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onFetchOrders: () => dispatch(actions.fetchOrders())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Orders, axios))","import React, { Component } from 'react';\n\nimport Input from '../../components/UI/Input/Input'\nimport Button from '../../components/UI/Button/Button'\nimport classes from './Auth.module.css'\n\nclass Auth extends Component {\n    state = {\n        controls: {\n            email: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'text',\n                    placeholder: 'Email Address'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    isEmail: true\n                },\n                valid: false,\n                touched: false\n            },\n            password: {\n                elementType: 'input',\n                elementConfig: {\n                    type: 'password',\n                    placeholder: 'password'\n                },\n                value: '',\n                validation: {\n                    required: true,\n                    minLength: 6\n                },\n                valid: false,\n                touched: false\n            },\n        }\n    }\n\n    checkValidity(value, rules) {\n        let isValid = true;\n        if(rules && rules.required) {\n            isValid = value.trim() !== '' && isValid\n        }\n\n        if(rules && rules.minLength) {\n            isValid = value.length >= rules.minLength && isValid\n        }\n\n        if(rules && rules.maxLength) {\n            isValid = value.length <= rules.maxLength && isValid\n        }\n\n        if(rules.isEmail) {\n            const pattern = /[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)/\n            isValid = pattern.test(value) && isValid\n            console.log('is Email')\n        }\n\n        if(rules.isNumeric) {\n            const pattern = /^\\d+$/;\n            isValid = pattern.test(value) && isValid\n        }\n\n        return isValid;\n    }\n\n    inputChangedHandler = (event, controlName) => {\n        const updatedControls = {\n            ...this.state.controls,\n            [controlName]: {\n                ...this.state.controls[controlName],\n                value: event.target.value,\n                valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n                touched: true\n            }\n        }\n\n        this.setState({controls: updatedControls})\n    }\n\n    render () {\n        const formElementsArray = []\n        for (let key in this.state.controls) {\n            formElementsArray.push({\n                id: key,\n                config: this.state.controls[key]\n            })\n        }\n\n        const form = formElementsArray.map(formElement => (\n            <Input \n                elementType={formElement.config.elementType} \n                elementConfig={formElement.config.elementConfig} \n                value={formElement.config.value} \n                key={formElement.id} \n                invalid={!formElement.config.valid}\n                shouldValidate={formElement.config.validation}\n                touched={formElement.config.touched}\n                changed={(event) => this.inputChangedHandler(event, formElement.id)} />\n            \n        ))\n        return (\n            <div className={classes.Auth}>\n                <form>\n                    {form}\n                    <Button btnType=\"Success\">SUBMIT</Button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Auth;","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom'\nimport Layout from './hoc/Layout/Layout';\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\n\nclass App extends Component {\n  render () {\n    return (\n      <div>\n        <Layout>\n          <Switch>\n            <Route path=\"/checkout\" component={Checkout} />\n            <Route path=\"/orders\" component={Orders} />\n            <Route path=\"/auth\" component={Auth} />\n            <Route path=\"/\" component={BurgerBuilder} />\n          </Switch>\n        </Layout>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const updateObject = (oldObject, updatedProperties) => {\n    return {\n        ...oldObject,\n        ...updatedProperties\n    }\n}","import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    ingredients: null,\n    totalPrice: 4,\n    error: false\n};\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    cheese: 0.4,\n    meat: 1.3,\n    bacon: 0.7\n}\n\nconst addIngredient = (state, action) => {\n    const updatedIngredient = { [action.ingredientName]: state.ingredients[action.ingredientName] + 1}\n    const updatedIngredients = updateObject(state.ingredients, updatedIngredient)\n    const updatedState = {\n        ingredients: updatedIngredients,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject(state, updatedState)\n}\n\nconst removeIngredient = (state, action) => {\n    const updatedIng = { [action.ingredientName]: state.ingredients[action.ingredientName] - 1}\n    const updatedIngs = updateObject(state.ingredients, updatedIng)\n    const updatedSt = {\n        ingredients: updatedIngs,\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName]\n    }\n    return updateObject(state, updatedSt)\n}\n\nconst setIngredients = (state, action) => {\n    return updateObject(state, {\n        ingredients: {\n            salad: action.ingredients.salad,\n            bacon: action.ingredients.bacon,\n            cheese: action.ingredients.cheese,\n            meat: action.ingredients.meat\n        },\n        totalPrice: 4,\n        error: false\n    })\n}\n\nconst fetchIngredientsFailed = (state, action) => {\n    return updateObject(state, {error: true})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.ADD_INGREDIENTS: return addIngredient(state, action)\n            \n        case actionTypes.REMOVE_INGREDIENTS: return removeIngredient(state, action)\n            \n        case actionTypes.SET_INGREDIENTS: return setIngredients(state, action)\n            \n        case actionTypes.FETCH_INGREDIENTS_FAILED: return fetchIngredientsFailed(state, action)\n            \n        default: return state;\n    }\n};\n\nexport default reducer;","import * as actionTypes from '../actions/actionTypes'\nimport { updateObject } from '../utility'\n\nconst initialState = {\n    orders: [],\n    loading: false,\n    purchased: false\n}\n\nconst purchaseInit = (state, action) => {\n    return updateObject(state, { purchased: false })\n}\n\nconst purchaseBurgerStart = (state, action) => {\n    return updateObject(state, {loading: true })\n}\n\nconst purchaseBurgerSuccess = (state, action) => {\n    const newOrder = updateObject(action.orderData, {id: action.orderId})\n        return updateObject(state, {\n            loading: false,\n            purchased: true,\n            orders: state.orders.concat(newOrder)})\n}\n\nconst purchaseBurgerFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst fetchOrdersStart = (state, action) => {\n    return updateObject(state, {loading: true})\n}\n\nconst fetchOrdersSuccess = (state, action) => {\n    return updateObject(state, {orders: action.orders, loading: false})\n}\n\nconst fetchOrdersFail = (state, action) => {\n    return updateObject(state, {loading: false})\n}\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.PURCHASE_INIT: return purchaseInit(state, action)\n            \n        case actionTypes.PURCHASE_BURGER_START: return purchaseBurgerStart(state, action)\n            \n        case actionTypes.PURCHASE_BURGER_SUCCESS: return purchaseBurgerSuccess(state, action)\n            \n        case actionTypes.PURCHASE_BURGER_FAIL: return purchaseBurgerFail(state, action)   \n        \n        case actionTypes.FETCH_ORDERS_START: return fetchOrdersStart(state, action)\n            \n        case actionTypes.FETCH_ORDERS_SUCCESS: return fetchOrdersSuccess(state, action)\n           \n        case actionTypes.FETCH_ORDERS_FAIL: return fetchOrdersFail(state, action)\n            \n        default:\n            return state;\n    }\n}\n\n\nexport default reducer","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\nimport burgerBuilderReducer from './store/reducers/burgerBuilder';\nimport orderReducer from './store/reducers/order'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n\tburgerBuilder: burgerBuilderReducer,\n\torder: orderReducer\n})\nconst store = createStore(rootReducer, /* preloadedState, */ composeEnhancers(\n\tapplyMiddleware(thunk)\n))\n\nconst app = (\n  <Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render( app, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}